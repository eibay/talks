Interfaces
A Tour of the Standard Libaray

Miki Tebeka
miki@ardanlabs.com
@tebeka

* Why?

.image picard-why.jpg

* A Data Driven Approach

.code stats.go /START_IFACES/,/END_IFACES/

    $ go run stats.go 
    ...
    /home/miki/sdk/go1.17.6/src/reflect/type.go:38 Type 29
    ...
    /home/miki/sdk/go1.17.6/src/text/template/parse/node.go:20 Node 4
    total: 121, max: 29, avg: 2.17

* error

src/builtin/builtin.go

	type error interface {
	    Error() string
	}

* AuthError

.code auth_err.go /START_AE/,/END_AE/
.code auth_err.go /START_LOGIN/,/END_LOGIN/

* AuthError - main

.play auth_err.go /START_MAIN/,/END_MAIN/

* io.Reader & io.Writer

src/io/io.go

.code io.go /START_IFACE/,/END_IFACE/

* Design Question

Why?
.code rdr.go /START_GO/,/END_GO/

And not?
.code rdr.go /START_PY/,/END_PY/

* Computing SHA1

    $ zcat system.log.gz | sha1sum
    5512a0192b6de03bbfbd4224f10d8e61da4af420  -

* io.Copy

.code cp.go /START_COPY/,/END_COPY/

* Computing SHA1

.play sha.go /START_SHA/,/END_SHA/

* Conditionally Computing SHA1

.play sha2.go /START_SHA/,/END_SHA/

# * Rot13
# 
# .code rot13.go /START_ROT13/,/END_ROT13/
# 
# * Rot13
# 
# .play rot13.go /START_MAIN/,/END_MAIN/

* wc -l

.code wc.txt

* Counting Lines

.code wc.go /START_COUNTER/,/END_COUNTER/
.play wc.go /START_MAIN/,/END_MAIN/

* Optimizations

- `io.ReaderAt`
- `io.ReaderFrom`
- `io.WriterAt`
- `io.WriterTo`
- `io.Seeker`

* HTTP Range Request

.code range.txt

See [[https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests]] for more details.
Also check out [[https://http.cat/404][http.cat]] â˜º

* ReadRange

.code range.go /START_RANGE/,/END_RANGE/
.play range.go /START_MAIN/,/END_MAIN/

* fmt.Stringer

	type Stringer interface {
	    String() string
	}

src/fmt/print.go

* Fun with Flags

.code flags.go /START_FLAG/,/END_FLAG/
# .play flags.go /START_MAIN/,/END_MAIN/

See also [[https://pkg.go.dev/golang.org/x/tools/cmd/stringer][x/tools/cmd/stringer]].

* fmt.Formatter

.code formatter.txt

src/fmt/print.go

* User

.code user.go /START_USER/,/END_USER/

* User

.play -edit user.go /START_MAIN/,/END_MAIN/

* JSON

	type Marshaler interface {
		MarshalJSON() ([]byte, error)
	}

	type Unmarshaler interface {
		UnmarshalJSON([]byte) error
	}

src/encoding/json/encode.go

* Value

.code value.go /START_VALUE/,/END_VALUE/

Value{15.4, Celcius} -> "15.4c"

* Value - MarshalJSON

.code value.go /START_MJ/,/END_MJ/
.play value.go /START_MAIN/,/END_MAIN/


* http.RoundTripper

.code round-tripper.txt

src/net/http/client.go

* APIClient

.code api_client_test.go /START_API_CLIENT/,/END_API_CLIENT/

* TestHealthError

.code api_client_test.go /START_TEST/,/END_TEST/

* http.Flusher

	type Flusher interface {
		// Flush sends any buffered data to the client.
		Flush()
	}

src/net/http/server.go

[[https://en.wikipedia.org/wiki/Chunked_transfer_encoding][Chunked transfer encoding]]

* A Crappy Example

[[http://robpike.io][robpike.io]]

.code req.txt

* A Pointless Example 

.code chunks.go /START_HANDLER/,/END_HANDLER/

* Calling

.code chunk_req.txt

* flag.Var

	type Value interface {
		String() string
		Set(string) error
	}

src/flag/flag.go

* IntFlag

.code flag.go /START_INTFLAG/,/END_INTFLAG/

Example from [[https://github.com/tebeka/flags][github.com/tebeka/flags]].

* IntFlag - flag.Var

.code flag.go /START_VAR/,/END_VAR/

* IntFlag - Usage

.code flag.go /START_MAIN/,/END_MAIN/
.code flag.txt

* testing.TB

	type TB interface {
		Cleanup(func())
		Error(args ...interface{})
		// ...
	}
	TB is the interface common to T and B.


src/testing/testing.go

* createDB

.code db_test.go /START_CREATE/,/END_CREATE/

`createDB` can be used both in a test or a benchmark.

* And Many More...

- [[https://pkg.go.dev/io/fs][fs]]
- [[https://pkg.go.dev/sort#Interface][sort.Interface]]
- [[https://pkg.go.dev/container/heap#Interface][heap.Interface]] 
- [[https://pkg.go.dev/sync#Locker][sync.Locker]]
- [[https://pkg.go.dev/net/http#Handler][http.Handler]] (see also [[https://pkg.go.dev/net/http#HandlerFunc][http.HandlerFunc]])
- [[https://pkg.go.dev/expvar#Var][expvar.Var]]
- ...
